
# Action_Framework_Breakdown Example

action_framework = {
    "Brainstorm (Goal)": "Your brainstorming or goal goes here",
    "Action Word (Situation)": "Your action word or situation goes here",
    "Context (Situation)": "Your context or situation details go here",
    "Prioritize (Preferences)": "Your prioritized elements, tone, style, or format preferences go here",
    "Reliability": "Your reliability standards go here",
    "Unbiased Output": "Your unbiased output guidelines go here",
    "Responsible AI": "Your Responsible AI instructions go here"
}    

    # Alternatively, you could embed the framework with your prompt and instruct the model to generate its output accordingly.

prompt = f"""
///Brainstorm (Goal): {action_framework['Brainstorm (Goal)']}
Action Word (Situation): {action_framework['Action Word (Situation)']}
Context (Situation): {action_framework['Context (Situation)']}
Prioritize (Preferences): {action_framework['Prioritize (Preferences)']}
Reliability: {action_framework['Reliability']}
Unbiased Output: {action_framework['Unbiased Output']}
Responsible AI: {action_framework['Responsible AI']}///
What is your actual prompt here?
"""

print(prompt)

# Use OpenAI's API to interact with the GPT model (GPT-3 as of my knowledge cutoff in September 2021, it could be a later version now).
# Ensure you replace 'your-prompt' with the actual prompt you created.

import openai

openai.api_key = 'your-api-key'

response = openai.Completion.create(
  engine="text-davinci-002",
  prompt=prompt,
  max_tokens=150
)

print(response.choices[0].text.strip())
# Sample code to collect feedback
user_feedback = input("Please provide your feedback on the AI's output: ")
# Sample code to refine an element of the Action Framework based on feedback
action_framework['Reliability'] = "Your refined reliability standards based on feedback go here"
